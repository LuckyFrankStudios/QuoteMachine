{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","randomIndex","getNewQuote","bind","variable","this","setState","Math","floor","random","length","quoteList","id","className","style","color","fontFamily","onClick","href","target","class","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA4HeA,E,kDAvHb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACTC,YAAa,GAIjB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPP,E,+CAUd,WACI,IAAIC,EAAW,CACX,CACE,KAAQ,0EACR,OAAU,iBAEZ,CACE,KAAQ,0CACR,OAAU,cAEZ,CACE,KAAQ,+CACR,OAAU,mBAEZ,CACE,KAAQ,uDACR,OAAU,8BAEZ,CACE,KAAQ,yCACR,OAAU,kBAEZ,CACE,KAAQ,mCACR,OAAU,WAEZ,CACE,KAAQ,yCACR,OAAU,iBAEZ,CACE,KAAQ,2BACR,OAAU,aAEZ,CACE,KAAQ,oDACR,OAAU,eAEhBC,KAAKC,UAAS,SAASN,GAEnB,MAAO,CACHC,YAAaM,KAAKC,MAAMD,KAAKE,SAAWL,EAASM,c,oBAO7D,WAGI,IAAMC,EAAY,CACd,CACE,KAAQ,0EACR,OAAU,iBAEZ,CACE,KAAQ,0CACR,OAAU,cAEZ,CACE,KAAQ,+CACR,OAAU,mBAEZ,CACE,KAAQ,uDACR,OAAU,8BAEZ,CACE,KAAQ,yCACR,OAAU,kBAEZ,CACE,KAAQ,mCACR,OAAU,WAEZ,CACE,KAAQ,yCACR,OAAU,iBAEZ,CACE,KAAQ,2BACR,OAAU,aAEZ,CACE,KAAQ,oDACR,OAAU,eAIlB,OACI,qBAAKC,GAAK,YAAYC,UAAY,YAAlC,SACI,sBAAKA,UAAY,YAAjB,UACI,oBAAIA,UAAY,cAAcC,MAAS,CAACC,MAAO,OAAQC,WAAY,kBAAnE,2BACJ,sBAAKH,UAAY,OAAjB,UACI,qBAAKD,GAAK,OAAOC,UAAY,cAA7B,SAA4CF,EAAUN,KAAKL,MAAMC,aAArB,OAC5C,qBAAKW,GAAG,SAASC,UAAY,YAA7B,SAA0CF,EAAUN,KAAKL,MAAMC,aAArB,YAE1C,qBAAKW,GAAK,mBAAV,SAChB,wBAAQA,GAAG,YAAYC,UAAY,kBAAkBI,QAAWZ,KAAKH,YAArE,yBAEA,oBAAGU,GAAK,cAAcM,KAAO,2BAA2BL,UAAY,kBAAkBM,OAAS,OAA/F,UAAsG,mBAAGC,MAAM,mBAA/G,qB,GAhHkBC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9f95b95.chunk.js","sourcesContent":["\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n        randomIndex: 0\n    };\n\n    \n    this.getNewQuote = this.getNewQuote.bind(this)\n  }\n\n  getNewQuote(){\n      let variable = [\n          {\n            \"text\": \"Genius is one percent inspiration and ninety-nine percent perspiration.\",\n            \"author\": \"Thomas Edison\"\n          },\n          {\n            \"text\": \"You can observe a lot just by watching.\",\n            \"author\": \"Yogi Berra\"\n          },\n          {\n            \"text\": \"A house divided against itself cannot stand.\",\n            \"author\": \"Abraham Lincoln\"\n          },\n          {\n            \"text\": \"Difficulties increase the nearer we get to the goal.\",\n            \"author\": \"Johann Wolfgang von Goethe\"\n          },\n          {\n            \"text\": \"Fate is in your hands and no one elses\",\n            \"author\": \"Byron Pulsifer\"\n          },\n          {\n            \"text\": \"Be the chief but never the lord.\",\n            \"author\": \"Lao Tzu\"\n          },\n          {\n            \"text\": \"Nothing happens unless first we dream.\",\n            \"author\": \"Carl Sandburg\"\n          },\n          {\n            \"text\": \"Well begun is half done.\",\n            \"author\": \"Aristotle\"\n          },\n          {\n            \"text\": \"Life is a learning experience, only if you learn.\",\n            \"author\": \"Yogi Berra\"\n          }]\n      this.setState(function(state){\n          \n          return {\n              randomIndex: Math.floor(Math.random() * variable.length) \n          }\n      })\n  }\n\n  \n\n  render() {\n      \n\n      const quoteList = [\n          {\n            \"text\": \"Genius is one percent inspiration and ninety-nine percent perspiration.\",\n            \"author\": \"Thomas Edison\"\n          },\n          {\n            \"text\": \"You can observe a lot just by watching.\",\n            \"author\": \"Yogi Berra\"\n          },\n          {\n            \"text\": \"A house divided against itself cannot stand.\",\n            \"author\": \"Abraham Lincoln\"\n          },\n          {\n            \"text\": \"Difficulties increase the nearer we get to the goal.\",\n            \"author\": \"Johann Wolfgang von Goethe\"\n          },\n          {\n            \"text\": \"Fate is in your hands and no one elses\",\n            \"author\": \"Byron Pulsifer\"\n          },\n          {\n            \"text\": \"Be the chief but never the lord.\",\n            \"author\": \"Lao Tzu\"\n          },\n          {\n            \"text\": \"Nothing happens unless first we dream.\",\n            \"author\": \"Carl Sandburg\"\n          },\n          {\n            \"text\": \"Well begun is half done.\",\n            \"author\": \"Aristotle\"\n          },\n          {\n            \"text\": \"Life is a learning experience, only if you learn.\",\n            \"author\": \"Yogi Berra\"\n          }]\n\n\n    return (\n        <div id = \"quote-box\" className = \"pl-5 pr-5\">\n            <div className = \"jumbotron\">\n                <h2 className = \"text-center\" style = {{color: \"blue\", fontFamily: \"Helvetica-bold\"}}>Quote Machine</h2>\n            <div className = \"card\">\n                <div id = \"text\" className = \"card-header\">{quoteList[this.state.randomIndex][\"text\"]}</div>\n                <div id=\"author\" className = \"card-body\">{quoteList[this.state.randomIndex][\"author\"]}</div>\n                </div>\n                <div id = \"button-container\">\n<button id=\"new-quote\" className = \"btn btn-primary\" onClick = {this.getNewQuote}>New Quote</button>\n</div>\n<a id = \"tweet-quote\" href = \"twitter.com/intent/tweet\" className = \"btn btn-primary\" target = \"_top\"><i class=\"fab fa-twitter\"></i> tweet</a>\n            </div>\n            \n\n        </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}